name: Frontend Checks
on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'

# Sets a default working directory
defaults:
  run:
    working-directory: ./frontend  # Change the working directory to /frontend

jobs:
  tests:
    name: Tests (${{ matrix.package }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
    strategy:
      fail-fast: false
      matrix:
        package:
          - cliq_ui
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
      - name: Set up Flutter (optional, kept for flutter deps)
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Get dependencies
        run: |
          cd packages/${{ matrix.package }}
          flutter pub get

      - name: Run tests
        run: |
          cd packages/${{ matrix.package }}
          flutter test --file-reporter=json:reports/test-results.json
      - name: Publish Test Results
        uses: dorny/test-reporter@v2
        if: ${{ !cancelled() }}
        with:
          name: Frontend Tests (${{ matrix.package }})
          path: frontend/packages/${{ matrix.package }}/reports/test-results.json
          reporter: flutter-json
          working-directory: ./

  format:
    name: Format
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Analyze (lint)
        run: flutter analyze --fatal-warnings
